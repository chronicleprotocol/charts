apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssb-server.fullname" . }}
  labels:
    {{- include "ssb-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ssb-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ssb-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ssb-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: copy-ssb-configs
        image: busybox
        command: ['sh', '-c', 'cp /config/* /root/.ssb/']
        volumeMounts:
        - name: ssb-dir
          mountPath: /root/.ssb/
        - name: config
          mountPath: /config/
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- include "helpers.list-env-variables" . | indent 12 }}
          volumeMounts:
          - name: ssb-dir
            mountPath: /root/.ssb/
      volumes:
      - name: ssb-dir
        emptyDir: {}
      {{- if .Values.ssbConfig.existingSecret }}
      - name: config
        secret:
          secretName: {{ .Values.ssbConfig.existingSecret.secretName }}
          items:
          - key: {{ .Values.ssbConfig.existingSecret.configSecretKey }}
            path: config
          - key: {{ .Values.ssbConfig.existingSecret.secretSecretKey }}
            path: config
      {{- else }}
      - name: config
        configMap:
          name: {{ include "ssb-server.fullname" . }}-config
          items:
          - key: config
            path: config
          - key: secret
            path: secret
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
