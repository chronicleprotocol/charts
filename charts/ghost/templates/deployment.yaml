apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ghost.fullname" . }}
  labels:
    {{- include "ghost.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ghost.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ghost.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ghost.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - "run"
            - "-v"
            - "{{ .Values.logLevel | default "debug" }}"
            - "--log.format"
            - "{{ .Values.logFormat | default "text" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
          {{- if .Values.ethRpcUrl }}
            - name: CFG_ETH_RPC_URLS
              value: "{{ .Values.ethRpcUrl }}"
          {{- end }}
          {{- if .Values.ethChainId }}
            - name: CFG_ETH_CHAIN_ID
              value: "{{ .Values.ethChainId }}"
          {{- end }}
          {{- if .Values.rpcUrl }}
            - name: CFG_RPC_URLS
              value: "{{ .Values.rpcUrl }}"
          {{- end }}
          {{- if .Values.chainId }}
            - name: CFG_CHAIN_ID
              value: "{{ .Values.chainId }}"
          {{- end }}
          {{- if .Values.ethConfig }}
            - name: CFG_ETH_FROM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethFrom.existingSecret }}
                  key: {{ .Values.ethConfig.ethFrom.key }}
            - name: CFG_ETH_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethKeys.existingSecret }}
                  key: {{ .Values.ethConfig.ethKeys.key }}
            - name: CFG_ETH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethPass.existingSecret }}
                  key: {{ .Values.ethConfig.ethPass.key }}
          {{- end }}
          {{- include "helpers.list-env-variables" . | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
