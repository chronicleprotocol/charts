apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "omnia-relay.fullname" . }}-config
data:
  ### note this config is only suitable for eth goerli as per https://github.com/chronicleprotocol/omnia-relay/blob/master/omnia/config/relay-ethereum-goerli.json
  omnia.json: |-
    {
      "mode": "relay",
      {{- if .Values.keystore.enabled }}
      "ethereum": {
        "from": "{{ .Values.keystore.ethFromAddress }}",
        "keystore": "/keystore/",
        "password": "/password/password.txt",
        "network": "{{ .Values.ethereum.ethRpc }}",
        "gasPrice": {
          "source": "{{ .Values.ethereum.gasPrice.source }}",
          "maxPriceMultiplier": {{ .Values.ethereum.gasPrice.maxPriceMultiplier | default 2 }},
          "tipMultiplier": {{ .Values.ethereum.gasPrice.tipMultiplier | default 1 }},
          "priority": "{{ .Values.ethereum.gasPrice.priority }}"
        }
      },
      {{- end }}
      "options": {
        "debug": "{{ .Values.omniaConfig.debug | default true }}",
        "goferConfig": "",
        "interval": 60,
        "logFormat": "{{ .Values.omniaConfig.logFormat | default "json" }}",
        "msgLimit": 35,
        "setzerCacheExpiry": 120,
        "setzerMinMedian": 3,
        "setzerTimeout": 10,
        "spireConfig": "",
        "srcTimeout": 10,
        "verbose": {{ .Values.omniaConfig.verbose | default true }},
        "ethGas": 200000,
        "chainType": "{{ .Values.omniaConfig.chainType }}"
      },
      {{- if .Values.omniaConfig.transports }}
      "transports": {{ toJson .Values.omniaConfig.transports }},
      {{ else }}
      "transports": ["spire"],
      {{- end }}
      {{- if .Values.omniaConfig.scuttlebotIdMap }}
      "scuttlebotIdMap": {
        {{- $keys := .Values.omniaConfig.scuttlebotIdMap | keys | sortAlpha }}
        {{- range $i, $key := $keys }}
        "{{ $key }}": "{{ index $.Values.omniaConfig.scuttlebotIdMap $key }}"{{ if not (eq $i (sub (len $keys) 1)) }},{{ end }}
        {{- end }}
      },
      {{- end }}
      "pairs": {
        {{- if .Values.omniaConfig.pairs }}
        {{- range .Values.omniaConfig.pairs }}
        "{{ .name }}": {
          "msgExpiration": {{ .msgExpiration }},
          "oracle": "{{ .oracle }}",
          "oracleExpiration": {{ .oracleExpiration }},
          "oracleSpread": {{ .oracleSpread }}
        }{{ if not (eq .name (index (last $.Values.omniaConfig.pairs) "name")) }},{{ end }}
        {{- end }}
        {{ else }}
        "BTC/USD": {
          "msgExpiration": 1800,
          "oracle": "0x586409bb88cF89BBAB0e106b0620241a0e4005c9",
          "oracleExpiration": 14400,
          "oracleSpread": 3
        },
        "ETH/USD": {
          "msgExpiration": 1800,
          "oracle": "0xD81834Aa83504F6614caE3592fb033e4b8130380",
          "oracleExpiration": 14400,
          "oracleSpread": 3
        },
        "GNO/USD": {
          "msgExpiration": 1800,
          "oracle": "0x0cd01b018C355a60B2Cc68A1e3d53853f05A7280",
          "oracleExpiration": 14400,
          "oracleSpread": 3
        },
        "MKR/USD": {
          "msgExpiration": 1800,
          "oracle": "0x496C851B2A9567DfEeE0ACBf04365F3ba00Eb8dC",
          "oracleExpiration": 14400,
          "oracleSpread": 3
        },
        "RETH/USD": {
          "msgExpiration": 1800,
          "oracle": "0x7eEE7e44055B6ddB65c6C970B061EC03365FADB3",
          "oracleExpiration": 14400,
          "oracleSpread": 3
        }{{- end }}
      }
    }
  spire.json: |-
    {{- if .Values.omniaConfig.spireJson }}
    {{ .Values.omniaConfig.spireJson | nindent 4 }}
    {{ else }}
    {
      "spire": {
        "rpc": {
          "address": "relay-spire:9100"
        },
      }
    }
    {{- end }}
