apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gofer.fullname" . }}
  labels:
    {{- include "gofer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gofer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- if .Values.configHcl }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gofer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gofer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.entryPointOverride }}
          command:
            {{- range .Values.entryPointOverride }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          args:
            {{- if .Values.argsOverride }}
            {{- range .Values.argsOverride }}
            - {{ . | quote }}
            {{- end }}
            {{- else }}
            - "{{ .Values.goferMode }}"
            {{- end }}
            {{- range $arg := .Values.extraArgs }}
            - "{{ $arg }}"
            {{- end }}
          ports:
          {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            ### Logging
            - name: CFG_LOG_LEVEL
              value: {{ .Values.logLevel | default "warning" | quote }}
            - name: CFG_LOG_FORMAT
              value: {{ .Values.logFormat | default "text" | quote }}
          {{- include "helpers.list-env-variables" . | indent 12 }}
          ### -- ADDITIONAL ENV VARS FROM `.Values.ghost.env.raw`
          {{- if .Values.env.raw }}
            {{- toYaml .Values.env.raw | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
