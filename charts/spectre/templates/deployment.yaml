apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spectre.fullname" . }}
  labels:
    {{- include "spectre.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spectre.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spectre.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spectre.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.entryPointOverride }}
          command:
            {{- range .Values.entryPointOverride }}
            - {{ . | quote }}
            {{- end }}
          {{- else }}
          command: ["/usr/local/bin/chronicle-app"]
          {{- end }}
          args:
            {{- if .Values.argsOverride }}
            {{- range .Values.argsOverride }}
            - {{ . | quote }}
            {{- end }}
            {{- else }}
            - "run"
            {{- if .Values.configsUrl }}
            - "-c"
            - "{{ .Values.configsUrl }}"
            {{- end }}
            {{- if .Values.inlineConfig }}
            - "--config"
            - "config.hcl"
            {{- end }}
            - "-v"
            - "{{ .Values.logLevel | default "debug" }}"
            - "--log.format"
            - "{{ .Values.logFormat | default "text" }}"
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- .Values.livenessProbe.probeSpec | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- .Values.readinessProbe.probeSpec | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: CFG_ENVIRONMENT
              value: "{{ .Values.environment | default "prod" }}"
            - name: CFG_CHAIN_RPC_URLS
              value: "{{ .Values.rpcUrl }}"
            - name: CFG_CHAIN_ID
              value: "{{ .Values.chainId }}"
            - name: CFG_CHAIN_NAME
              value: "{{ .Values.chainType }}"
            - name: CFG_CHAIN_TX_TYPE
              value: "{{ .Values.txType }}"
          {{- if .Values.ethConfig }}
            - name: CFG_ETH_FROM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethFrom.existingSecret }}
                  key: {{ .Values.ethConfig.ethFrom.key }}
            - name: CFG_ETH_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethKeys.existingSecret }}
                  key: {{ .Values.ethConfig.ethKeys.key }}
            - name: CFG_ETH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ethConfig.ethPass.existingSecret }}
                  key: {{ .Values.ethConfig.ethPass.key }}
          {{- end }}
          {{- include "helpers.list-env-variables" . | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.inlineConfig }}
          volumeMounts:
            - name: inline-config
              mountPath: /config.hcl
              subPath: config.hcl
              readOnly: true
          {{- end }}

      {{- if .Values.inlineConfig }}
      volumes:
        - name: inline-config
          configMap:
            name: inline-config
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
