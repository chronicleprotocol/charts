# Default values for spectre.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/chronicleprotocol/spectre
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Provide ETH keys from existing secrets
# use only existing secret OR env vars, do not provide both
ethConfig: {}
  # ethFrom:
  #   existingSecret: ""
  #   key: ""
  # ethKeys:
  #   existingSecret: ""
  #   key: ""
  # ethPass:
  #   existingSecret: ""
  #   key: ""
# Environment variable listing
env: {}
  # non sensitive variables
  # refer to https://github.com/chronicleprotocol/oracle-suite/tree/master/cmd/spire#environment-variables
  # normal:
  #    CFG_ETH_FROM: ${ETH_FROM_D}
  #    CFG_ETH_KEYS: ${ETH_KEYS_D}
  #    CFG_ETH_PASS: ""
  #    CFG_FEEDS: "${ETH_FROM_A},${ETH_FROM_B},${ETH_FROM_C}"
  #    CFG_LIBP2P_BOOTSTRAP_ADDRS: "/dns4/bootstrap.local/tcp/8000/p2p/12D3KooWJgSBDkfdkoXNBBS91uaM1FRE4GowChEgr4SWDKEz75Rq"
  #    CFG_GOFER_OPENEXCHANGERATES_API_KEY:
  #    CFG_WEBAPI_ENABLE: 0
  #    CFG_ETH_RPC_URLS: ${ETH_RPCS} # comma separated list of ethereum rpc urls
  #    CFG_ETH_CHAIN_ID: ${ETH_CHID} # ethereum chain id
  #    CFG_ARB_RPC_URLS: ${ARB_RPCS} # comma separated list of arbitrum rpc urls
  #    CFG_ARB_CHAIN_ID: ${ARB_CHID} # arbitrum chain id
  #    CFG_OPT_RPC_URLS: ${OPT_RPCS} # comma separated list of optimism rpc urls
  #    CFG_OPT_CHAIN_ID: ${OPT_CHID} # optimism chain id

logLevel: null
logFormat: null

commandOverride: []
  # - /bin/foo
  # - bar
argsOverride: []
  # - --lorem
  # - "ipsum"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    listen:
      port: 8080
      protocol: TCP
    # rpc:
    #   port: 9100
    #   protocol: TCP


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
livenessProbe:
  enabled: false
  probeSpec:
    httpGet:
      path: /healthz
      port: listen
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

readinessProbe:
  enabled: false
  probeSpec:
    httpGet:
      path: /healthz
      port: listen
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: some-secrets
  #   spec:
  #     backendType: someBackend
  #     data:
  #       - key: some-creds
  #         name: client_secret
