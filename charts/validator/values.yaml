# Default values for ghost.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Values for Ghost
ghost:
  replicaCount: 1

  image:
    repository: ghcr.io/chronicleprotocol/ghost
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  logLevel: info
  logFormat: json

  chainName: eth
  rpcUrl: 'https://eth.llamarpc.com'
  chainId: '1'

  ethRpcUrl: 'https://eth.llamarpc.com'
  ethChainId: '1'

  arbRpcUrl: 'https://arbitrum.drpc.org'
  ethArchRpcUrl: 'https://mainnet.infura.io/v3/'
  gnoRpcUrl: 'https://gnosis-pokt.nodies.app'
  mntRpcUrl: 'https://rpc.mantle.xyz'
  optRpcUrl: 'https://mainnet.optimism.io'
  polRpcUrl: 'https://zkevm-rpc.com'

  watchdogConfigReg: "0x94Fea534aef6df5cF66C2DAE5CE0A05d10C068F3"
  watchdogInterval: "900s"

  libP2pSubscriptionBufferSize: '4096'
  libp2pValidateQueueSize: '4096'

  webApi:
    enabled: true
    listenAddr: ":8080"
    socks5ProxyAddr: "tor-proxy:9050"

  # Provide ETH keys from existing secrets
  # -- use only existing secret OR env vars, do not provide both
  ethConfig: {}
    # ethFrom:
    #   existingSecret: ""
    #   key: ""
    # ethKeys:
    #   existingSecret: ""
    #   key: ""
    # ethPass:
    #   existingSecret: ""
    #   key: ""

  # --Environment variable listing
  env:
    normal:
      # GOLOG_LOG_LEVEL: pubsub=debug
      # TODO

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: "ghost"

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    ports:
      libp2p:
        port: 8000
        protocol: TCP
      metrics:
        port: 9100
        protocol: TCP
      ### to add more port-mappings, add them here:
      # rpc:
      #   port: 9100
      #   protocol: TCP
    annotations: {}
      # external-dns.alpha.kubernetes.io/hostname: DOMAIN_NAME

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Liveness probe
  liveness:
    enabled: true
    livenessProbe:
      httpGet:
        path: /healthcheck
        port: 9100
      initialDelaySeconds: 30
      periodSeconds: 60

  # -- Readiness probe
  readiness:
    enabled: true
    readinessProbe:
      httpGet:
        path: /metrics
        port: 9100
      initialDelaySeconds: 30
      periodSeconds: 60

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Values for Tor Proxy (subchart of ghost)
tor-proxy:
  # -- values for tor-proxy: refer to the [tor-proxy](https://github.com/chronicleprotocol/charts/blob/main/charts/tor-proxy/values.yaml) subchart
  enabled: true
  fullnameOverride: "tor-proxy"
  service:
    type: ClusterIP
    ports:
      socks:
        port: 9050
        protocol: TCP
      # musig:
      #   port: 8888
      #   protocol: TCP

  # -- non-sensitive variables passed to container as environment variables
  env:
    normal:
      TOR_EXTRA_ARGS: |
        SocksPort 0.0.0.0:9050
        HiddenServiceDir /var/lib/tor/hidden_services
        HiddenServicePort 8888 ghost:8080

  # -- provide tor keys from existing secret
  torConfig: {}
    # existingSecret: ""
    # OR specify a private key
    # torKeys: {}
      # secret_key: null
      # public_key: null
      # hostname: null

# -- Extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: some-secrets
  #   spec:
  #     backendType: someBackend
  #     data:
  #       - key: some-creds
  #         name: client_secret
