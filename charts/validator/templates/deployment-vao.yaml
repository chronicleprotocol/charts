apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}-vao
  labels:
    {{- include "validatorVao.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      {{- include "validatorVao.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "validatorVao.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      serviceAccountName: {{ include "validator.serviceAccountName" . }}

      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}

      containers:
        - name: vao
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"

          {{- if .Values.vao.commandOverride }}
          command:
            {{- range .Values.vao.commandOverride }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}

          {{- if .Values.vao.argsOverride }}
          args:
            {{- range .Values.vao.argsOverride }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
          {{- range $key, $val := .Values.vao.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}

          {{- if .Values.global.metrics.enabled }}
            - containerPort: {{ .Values.global.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}

          {{- if .Values.global.liveness.enabled }}
            - containerPort: {{ .Values.global.liveness.livenessProbe.httpGet.port }}
              name: probe-live
              protocol: TCP
          {{- end }}
          {{- if .Values.global.readiness.enabled }}
            - containerPort: {{ .Values.global.readiness.readinessProbe.httpGet.port }}
              name: probe-ready
              protocol: TCP
          {{- end }}

          {{- if .Values.global.liveness.enabled }}
          livenessProbe:
            {{- toYaml .Values.global.liveness.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.global.readiness.enabled }}
          readinessProbe:
            {{- toYaml .Values.global.readiness.readinessProbe | nindent 12 }}
          {{- end }}
          env:
            ### -- WATCHDOG
            - name: WATCHDOG_CONFIG_REGISTRY
              value: {{ .Values.vao.watchdogConfigReg | quote }}

            {{- if .Values.ghost.watchdogInterval }}
            - name: WATCHDOG_INTERVAL
              value: {{ .Values.ghost.watchdogInterval | quote }}
            - name: WATCHDOG_SCHEDULE
              value: ""
            {{- end }}

            ### -- LIBP2P
            - name: CFG_LIBP2P_LISTEN_ADDRS
              value: "/ip4/0.0.0.0/tcp/{{ .Values.vao.service.ports.libp2p.port | default 8001 }}"

            ### -- CHAIN and RPC (target or main chain)
            - name: CFG_CHAIN_NAME
              value: {{ .Values.global.chainName | default "eth" | quote }}
            - name: CFG_CHAIN_ID
              value: {{ .Values.global.chainId | default "1" | quote }}
            - name: CFG_CHAIN_RPC_URLS
              value: {{ .Values.ghost.rpcUrl | quote }}
              {{- if .Values.global.chainTxType }}
            - name: CFG_CHAIN_TX_TYPE
              value: {{ .Values.global.chainTxType | default "eip1559" quote }}
              {{- end }}

          ### -- ETH KEYSTORE FROM EXISTING SECRET
          {{- if .Values.ghost.ethConfig }}
            - name: CFG_ETH_FROM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethFrom.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethFrom.key }}
            - name: CFG_ETH_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethKeys.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethKeys.key }}
            - name: CFG_ETH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethPass.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethPass.key }}
          {{- end }}

          ### Logging
            - name: CFG_LOG_LEVEL
              value: {{ .Values.global.logLevel | default "warning" | quote }}
            - name: CFG_LOG_FORMAT
              value: {{ .Values.global.logFormat | default "text" | quote }}
            {{- if eq "vao" .Values.vao.mode }}
            - name: CFG_DEFI_ENABLE
              value: "0"
            - name: CFG_VAO_ENABLE
              value: "1"
            {{- end }}
          ### -- ADDITIONAL ENV VARS FROM `.Values.ghost.env.normal`
          {{- range $key, $val := .Values.ghost.env.normal }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}

          ### -- ADDITIONAL ENV VARS FROM `.Values.ghost.env.raw`
          {{- if .Values.ghost.env.raw }}
            {{- toYaml .Values.ghost.env.raw | nindent 12 }}
          {{- end }}

          {{- if .Values.vao.extraVolumes }}
          volumeMounts:
            {{- range .Values.vao.extraVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              readOnly: {{ .readOnly | default true }}
            {{- end }}
          {{- end }}

      {{- if .Values.vao.extraVolumes }}
      volumes:
        {{- range .Values.vao.extraVolumes }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- end }}

          {{- with .Values.ghost.resources }}
          resources:
            {{- toYaml .Values.ghost.resources | nindent 12 }}
          {{- end }}


      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
