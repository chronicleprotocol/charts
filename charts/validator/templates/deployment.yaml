apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}
  labels:
    {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ghost.replicaCount }}
  selector:
    matchLabels:
      {{- include "validator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.ghost.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "validator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.ghost.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "validator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.ghost.podSecurityContext | nindent 8 }}
      containers:
        - name: ghost
          securityContext:
            {{- toYaml .Values.ghost.securityContext | nindent 12 }}
          {{- if .Values.ghost.hostNetwork }}
          hostNetwork: true
          {{- end }}
          image: "{{ .Values.ghost.image.repository }}:{{ .Values.ghost.image.tag | default .Chart.AppVersion }}"
          args:
            - "run"
            - "-v"
            - "{{ .Values.ghost.logLevel | default "warning" }}"
            - "--log.format"
            - "{{ .Values.ghost.logFormat | default "text" }}"
          imagePullPolicy: {{ .Values.ghost.image.pullPolicy }}
          ports:
          {{- range $key, $val := .Values.ghost.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}

          {{- if .Values.ghost.liveness.enabled }}
          livenessProbe:
            {{- toYaml .Values.ghost.liveness.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.ghost.readiness.enabled }}
          readinessProbe:
            {{- toYaml .Values.ghost.readiness.readinessProbe | nindent 12 }}
          {{- end }}

          env:
            ### -- LIBP2P
            - name: CFG_LIBP2P_SUBSCRIPTION_BUFFER_SIZE
              value: {{ .Values.ghost.libP2pSubscriptionBufferSize | quote }}
            - name: CFG_LIBP2P_VALIDATE_QUEUE_SIZE
              value: {{ .Values.ghost.libp2pValidateQueueSize | quote }}
            - name: CFG_LIBP2P_LISTEN_ADDRS
              value: "/ip4/0.0.0.0/tcp/{{ .Values.ghost.service.ports.libp2p.port | default 8000 }}"
          {{- if eq .Values.ghost.service.type "LoadBalancer" }}
            - name: CFG_LIBP2P_EXTERNAL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          {{- end }}
          {{- if .Values.ghost.ingress.enabled }}
          {{- range .Values.ghost.ingress.hosts }}
            - name: CFG_LIBP2P_EXTERNAL_ADDR
              value: "/dns/{{ .host  }}"
          {{- end }}
          {{- end }}
            ### -- WEB API
            {{- if .Values.ghost.webApi.enabled }}
            - name: CFG_WEBAPI_ENABLE
              value: {{ .Values.ghost.webApi.enabled | quote }}
            - name: CFG_WEBAPI_LISTEN_ADDR
              value: {{ .Values.ghost.webApi.listenAddr | quote }}
            - name: CFG_WEBAPI_SOCKS5_PROXY_ADDR
              value: "{{ include "validator.fullname" . }}-tor-svc:8888"
            - name: CFG_WEB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "validator.fullname" . }}-tor-secret
                  key: onionAddress
            {{- end }}
              ### -- CHAIN and RPC (target or main chain)
            - name: CFG_CHAIN_NAME
              value: {{ .Values.ghost.chainName | default "eth" | quote}}
            - name: CFG_CHAIN_ID
              value: {{ .Values.ghost.chainId | default "1" | quote}}
              {{- if .Values.ghost.rpcUrl }}
            - name: CFG_CHAIN_RPC_URLS
              value: {{ .Values.ghost.rpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.chainTxType }}
            - name: CFG_CHAIN_TX_TYPE
              value: {{ .Values.ghost.chainTxType | default "eip1559" quote }}
              {{- end }}
              ### -- CHAIN and RPC (source chain)
              {{- if .Values.ghost.arbRpcUrl }}
            - name: CFG_ARB_RPC_URLS
              value: {{ .Values.ghost.arbRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.ethRpcUrl }}
            - name: CFG_ETH_RPC_URLS
              value: {{ .Values.ghost.ethRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.ethArchRpcUrl }}
            - name: CFG_ETH_ARCH_RPC_URLS
              value: {{ .Values.ghost.ethArchRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.gnoRpcUrl }}
            - name: CFG_GNO_RPC_URLS
              value: {{ .Values.ghost.gnoRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.mntRpcUrl }}
            - name: CFG_MNT_RPC_URLS
              value: {{ .Values.ghost.mntRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.optRpcUrl }}
            - name: CFG_OPT_RPC_URLS
              value: {{ .Values.ghost.optRpcUrl | quote }}
              {{- end }}
              {{- if .Values.ghost.polRpcUrl }}
            - name: CFG_POL_RPC_URLS
              value: {{ .Values.ghost.polRpcUrl | quote }}
              {{- end }}
              ### -- WATCHDOG
            - name: WATCHDOG_CONFIG_REGISTRY
              value: {{ .Values.ghost.watchdogConfigReg | quote }}
            - name: WATCHDOG_INTERVAL
              value: {{ .Values.ghost.watchdogInterval | default "900s" | quote }}
          ### -- ETH KEYSTORE FROM EXISTING SECRET
          {{- if .Values.ghost.ethConfig }}
            - name: CFG_ETH_FROM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethFrom.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethFrom.key }}
            - name: CFG_ETH_KEYS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethKeys.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethKeys.key }}
            - name: CFG_ETH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ghost.ethConfig.ethPass.existingSecret }}
                  key: {{ .Values.ghost.ethConfig.ethPass.key }}
          {{- end }}
          ### -- ADDITIONAL ENV VARS FROM `.Values.ghost.env.normal`
          {{- range $key, $val := .Values.ghost.env.normal }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.ghost.resources | nindent 12 }}

      {{- with .Values.ghost.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ghost.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ghost.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
