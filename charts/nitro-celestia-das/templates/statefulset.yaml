apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nitro-celestia-das.fullname" . }}
  labels:
    {{- include "nitro-celestia-das.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nitro-celestia-das.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "nitro-celestia-das.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nitro-celestia-das.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nitro-celestia-das.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            -  /usr/local/bin/nitro
          args:
            - --http.api={{ .Values.nitro.httpApi | join "," }}
            - --http.corsdomain={{ .Values.nitro.httpCorsDomain | default "*" }}
            - --http.addr={{ .Values.nitro.httpAddr | default "0.0.0.0" }}
            - --http.vhosts={{ .Values.nitro.httpVhosts | default "*" }}
            - --parent-chain.connection.url={{ .Values.nitro.l1RpcUrl }}
            - --parent-chain.blob-client.beacon-url={{ .Values.nitro.l1BeaconUrl }}
          {{- if .Values.nitro.metrics.enabled }}
            - --metrics
            - --metrics-server.addr={{ .Values.nitro.metrics.serverAddr | default "127.0.0.1"}}
            - --metrics-server.port={{ .Values.nitro.metrics.serverPort | default "6070"}}
            - --metrics-server.update-interval={{ .Values.nitro.metrics.serverUpdateInterval | default "5s"}}
          {{- end }}
            - --chain.id={{ .Values.nitro.l2ChainId }}
          {{- if .Values.nitro.l2ChainInfo }}
            - --chain.info-json={{ .Values.nitro.l2ChainInfo }}
          {{- end }}
          {{- if .Values.nitro.l2ChainName }}
            - --chain.name={{ .Values.nitro.l2ChainName }}
          {{- end }}
          {{- if .Values.nitro.l2ExecutionCaching }}
            - --execution.caching.archive
          {{- end }}
          {{- if .Values.nitro.l2ExecutionForwardingTarget }}
            - --execution.forwarding-target={{ .Values.nitro.l2ExecutionForwardingTarget }}
          {{- end }}
          {{- if .Values.nitro.l2NodeDataAvailability.enabled }}
            - --node.data-availability.enable=true
            - --node.data-availability.rest-aggregator.enable={{ .Values.nitro.l2NodeDataAvailability.restAggregator }}
            - --node.data-availability.rest-aggregator.urls={{ .Values.nitro.l2NodeDataAvailability.urls }}
            - --node.staker.enable={{ .Values.nitro.l2Staker }}
            - --node.feed.input.url={{ .Values.nitro.l2FeedInputUrl }}
          {{- end }}
          {{- range $arg := .Values.nitro.extraArgs }}
            {{- $arg | nindent 12 }}
          {{- end }}
          ports:
          {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}
          {{ if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: rpc
          readinessProbe:
            httpGet:
              path: /
              port: rpc
          {{ end }}
          volumeMounts:
            - name: storage
              mountPath: {{ .Values.data.path }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}
