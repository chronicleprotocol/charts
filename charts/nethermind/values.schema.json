{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": false,
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage"
      ],
      "title": "autoscaling",
      "type": "object"
    },
    "data": {
      "additionalProperties": false,
      "description": "Path to store data",
      "properties": {
        "path": {
          "default": "/nethermind-data",
          "required": [],
          "title": "path",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "title": "data",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "healthChecks": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ui": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "ui",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "ui"
      ],
      "title": "healthChecks",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "nethermind/nethermind",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "jsonrpc": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "engine": {
          "additionalProperties": false,
          "properties": {
            "modules": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  },
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "modules",
              "type": "array"
            }
          },
          "required": [
            "modules"
          ],
          "title": "engine",
          "type": "object"
        },
        "modules": {
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              },
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "modules",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "modules",
        "engine"
      ],
      "title": "jsonrpc",
      "type": "object"
    },
    "jwt": {
      "default": "ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a",
      "description": "JWT secret used by client as a secret. Change this value.",
      "required": [],
      "title": "jwt",
      "type": "string"
    },
    "livenessProbe": {
      "additionalProperties": false,
      "properties": {
        "initialDelaySeconds": {
          "default": 60,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 120,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "tcpSocket": {
          "additionalProperties": false,
          "properties": {
            "port": {
              "default": "httprpc",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [
            "port"
          ],
          "title": "tcpSocket",
          "type": "object"
        }
      },
      "required": [
        "tcpSocket",
        "initialDelaySeconds",
        "periodSeconds"
      ],
      "title": "livenessProbe",
      "type": "object"
    },
    "logLevel": {
      "default": "INFO",
      "description": "Log level for the node",
      "required": [],
      "title": "logLevel",
      "type": "string"
    },
    "metrics": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ethStats": {
          "default": true,
          "description": "add node to ethstat",
          "required": [],
          "title": "ethStats",
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "ethStats"
      ],
      "title": "metrics",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "network": {
      "default": "sepolia",
      "description": "can be Energy Web,Exosama,Goerli (testnet),Gnosis, Chiado ,Holesky (testnet),Mainnet,Sepolia (testnet),Volta (testnet)",
      "required": [],
      "title": "network",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "persistence": {
      "additionalProperties": false,
      "properties": {
        "accessModes": {
          "description": "Access mode for the volume claim template",
          "items": {
            "anyOf": [
              {
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "accessModes",
          "type": "array"
        },
        "annotations": {
          "additionalProperties": false,
          "description": "Annotations for volume claim template",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Uses an EmptyDir when not enabled",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingClaim": {
          "default": "",
          "description": "Use an existing PVC when persistence.enabled",
          "required": [],
          "title": "existingClaim",
          "type": "string"
        },
        "selector": {
          "additionalProperties": false,
          "description": "Selector for volume claim template",
          "required": [],
          "title": "selector",
          "type": "object"
        },
        "size": {
          "default": "20Gi",
          "description": "Requested size for volume claim template",
          "required": [],
          "title": "size",
          "type": "string"
        },
        "storageClassName": {
          "default": "",
          "description": "Use a specific storage class\nE.g 'local-path' for local storage to achieve best performance\nRead more (https://github.com/rancher/local-path-provisioner)",
          "required": [],
          "title": "storageClassName",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "existingClaim",
        "accessModes",
        "size",
        "storageClassName",
        "annotations",
        "selector"
      ],
      "title": "persistence",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": false,
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": false,
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": false,
      "properties": {
        "initialDelaySeconds": {
          "default": 10,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 10,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "tcpSocket": {
          "additionalProperties": false,
          "properties": {
            "port": {
              "default": "httprpc",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [
            "port"
          ],
          "title": "tcpSocket",
          "type": "object"
        }
      },
      "required": [
        "tcpSocket",
        "initialDelaySeconds",
        "periodSeconds"
      ],
      "title": "readinessProbe",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "properties": {
        "ports": {
          "additionalProperties": false,
          "properties": {
            "auth": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 8551,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "auth",
              "type": "object"
            },
            "httprpc": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 8545,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "httprpc",
              "type": "object"
            },
            "metrics": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 9545,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "metrics",
              "type": "object"
            },
            "p2ptcp": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 30303,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "p2ptcp",
              "type": "object"
            },
            "p2pudp": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 30303,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "UDP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "p2pudp",
              "type": "object"
            },
            "ws": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 8546,
                  "required": [],
                  "title": "port",
                  "type": "integer"
                },
                "protocol": {
                  "default": "TCP",
                  "required": [],
                  "title": "protocol",
                  "type": "string"
                }
              },
              "required": [
                "port",
                "protocol"
              ],
              "title": "ws",
              "type": "object"
            }
          },
          "required": [
            "httprpc",
            "ws",
            "auth",
            "p2ptcp",
            "p2pudp",
            "metrics"
          ],
          "title": "ports",
          "type": "object"
        },
        "type": {
          "default": "ClusterIP",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "ports"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "description": "Additional ServiceMonitor annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "If true, a ServiceMonitor CRD is created for a prometheus operator\nhttps://github.com/coreos/prometheus-operator",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "1m",
          "description": "ServiceMonitor scrape interval",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "labels": {
          "additionalProperties": false,
          "description": "Additional ServiceMonitor labels",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "namespace": {
          "default": "",
          "description": "Alternative namespace for ServiceMonitor",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "path": {
          "default": "/debug/metrics",
          "description": "Path to scrape",
          "required": [],
          "title": "path",
          "type": "string"
        },
        "relabelings": {
          "description": "ServiceMonitor relabelings",
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scheme": {
          "default": "http",
          "description": "ServiceMonitor scheme",
          "required": [],
          "title": "scheme",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "30s",
          "description": "ServiceMonitor scrape timeout",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "tlsConfig": {
          "additionalProperties": false,
          "description": "ServiceMonitor TLS configuration",
          "required": [],
          "title": "tlsConfig",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "path",
        "namespace",
        "labels",
        "annotations",
        "interval",
        "scheme",
        "tlsConfig",
        "scrapeTimeout",
        "relabelings"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "syncMode": {
      "default": "SnapSync",
      "description": "syncMode can be FastSync, SnapSync",
      "required": [],
      "title": "syncMode",
      "type": "string"
    },
    "tolerations": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "replicaCount",
    "network",
    "data",
    "jwt",
    "logLevel",
    "syncMode",
    "jsonrpc",
    "image",
    "imagePullSecrets",
    "nameOverride",
    "fullnameOverride",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "service",
    "livenessProbe",
    "readinessProbe",
    "ingress",
    "persistence",
    "metrics",
    "healthChecks",
    "serviceMonitor",
    "resources",
    "autoscaling",
    "nodeSelector",
    "tolerations",
    "affinity"
  ],
  "type": "object"
}
