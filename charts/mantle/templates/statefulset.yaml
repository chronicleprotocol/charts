apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mantle.fullname" . }}
  labels:
    {{- include "mantle.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mantle.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mantle.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mantle.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mantle.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.snapShotSync.enabled }}
      initContainers:
        - name: init-download-snapshot
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - >
              set -euxo pipefail;
              cd {{ .Values.data.path }};
              echo "Downloading snapshot tarball..." ;
              wget -O {{ .Values.snapShotSync.tarballName }} {{ .Values.snapShotSync.snapShotUrl }}/{{ .Values.snapShotSync.tarballName }};
              echo "Extracting snapshot tarball...";
              tar xf {{ .Values.snapShotSync.tarballName }};
              echo "Deleting tarball archive..." &&
              rm -f {{ .Values.snapShotSync.tarballName }};
              echo "Snapshot download and extraction complete.";
          volumeMounts:
            - name: storage
              mountPath: {{ .Values.data.path}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # command: ["/bin/sh", "-c", "/usr/local/bin/geth.sh"]
          args:
          {{- if .Values.args }}
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          ports:
          {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.port }}
              protocol: {{ $val.protocol }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: {{ .Values.data.path }}
          env:
            - name: DATADIR
              value: "/root/.ethereum"
            - name: ETH1_HTTP
              value: "{{ .Values.ethL1 }}"
            - name: ROLLUP_CLIENT_HTTP
              value: "{{ .Values.rollUpClientHttp }}"
            - name: SEQUENCER_CLIENT_HTTP
              value: "{{ .Values.sequencerClientHttp }}"
            - name: BLOCK_SIGNER_ADDRESS
              value: "{{ .Values.blockSignerAddress }}"
            - name: BLOCK_SIGNER_KEY
              value: "{{ .Values.blockSignerKey }}"
            - name: NETWORK_ID
              value: "{{ .Values.networkId }}"
            - name: CHAIN_ID
              value: "{{ .Values.chainId }}"
            - name: ROLLUP_STATE_DUMP_PATH
              value: "{{ .Values.rollUpStateDumpPath }}"
            - name: WS_PORT
              value: "{{ .Values.service.ports.wsrpc.port }}"
            - name: RPC_PORT
              value: "{{ .Values.service.ports.httprpc.port }}"

          {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}
