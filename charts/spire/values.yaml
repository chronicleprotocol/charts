# Default values for spire.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/chronicleprotocol/spire
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "spire"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    libp2p:
      port: 8000
      protocol: TCP
    ### to add more listeners for webapi, add them here
    # rpc:
    #   port: 9100
    #   protocol: TCP
    # webapi:
    #   port: 8080
    #   protocol: TCP
  annotations:
    {}
    # external-dns.alpha.kubernetes.io/hostname: DOMAIN_NAME

# -- Liveness probe
liveness:
  enabled: true
  livenessProbe:
    tcpSocket:
      port: libp2p
    initialDelaySeconds: 10
    periodSeconds: 10

# -- Readiness probe
readiness:
  enabled: true
  readinessProbe:
    tcpSocket:
      port: libp2p
    initialDelaySeconds: 10
    periodSeconds: 10

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configurations for spire : default mode is to run as agent
# if true, runs bootstrap mode
bootstrap: false

# if true, runs stream mode
stream: true

# if true, runs as a watch mode
watch: false

# if true, runs spire in kafka made
kafka:
  enabled: false
  kafkaEnpoint: kafka.default.svc.cluster.local:9092
  kafkaTopics: {}
    # - "--topic"
    # - "data-point-v1"
    # - "data_point/v1"

# custom Args that may be added to the agent
customArgs: []

## logLevel is the log level for the spire server (debug,info,trace,etc)
logLevel: null

## logFormat is the log format for the spire server (json, or text)
logFormat: null

# Environment variable listing
env:
  # non sensitive variables
  # refer to https://github.com/chronicleprotocol/oracle-suite/tree/master/cmd/spire#environment-variables
  normal: {}
    # CFG_ITEM_SEPARATOR: "\n"
    # CFG_FEEDS: stage
    # CFG_LIBP2P_PK_SEED: "1234567981234567981234567981234567981234123456798123456798123456" # 64 bytes libp2p for bootstrap only
    # CFG_LIBP2P_BOOTSTRAP_ADDRS: |-
    #   /dns/bootstrap.some.domain/tcp/8000/p2p/<some_libp2p_pub_key>
    # # webapi - receive only (Spire Stream)
    # CFG_WEBAPI_ENABLE: 1
    # ## receiving
    # CFG_WEBAPI_LISTEN_ADDR: ":8080"
    # ## sending
    # CFG_WEBAPI_SOCKS5_PROXY_ADDR: "" # no proxy
    # ### on-chain address book
    # CFG_WEBAPI_ETH_ADDR_BOOK: "" # no addr book contract
    # ### local address book
    # CFG_WEBAPI_STATIC_ADDR_BOOK: "" # no addresses

# This is a config file for spire. it can override the default config if supplied
# It is in HCL format.
# For more information on HCL, see https://github.com/chronicleprotocol/oracle-suite/blob/master/config.hcl
configHcl: {}

tor-proxy:
  enabled: false
  env:
    normal:
      TOR_EXTRA_ARGS: |
        SocksPort 0.0.0.0:9050
        HiddenServiceDir /var/lib/tor/hidden_services
        HiddenServicePort 8888 spire:8080

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- port to scrape
  port: metrics
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 30s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []


# -- Extra K8s manifests to deploy
extraObjects:
  []
  # - apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: promtail-secrets
  #   spec:
  #     backendType: gcpSecretsManager
  #     data:
  #       - key: promtail-oauth2-creds
  #         name: client_secret
