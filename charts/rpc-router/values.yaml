# Default values for rpc-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: drpcorg/dshackle
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    proxy:
      port: 8545
      protocol: TCP
    grpc:
      port: 12448
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
### Ref: https://github.com/p2p-org/dshackle/blob/master/docs/reference-configuration.adoc
dshackle:
  routes:
    - id: eth
      blockchain: ethereum
    - id: goerli
      blockchain: goerli
    - id: arb
      blockchain: arbitrum
    - id: arbgoerli
      blockchain: arbitrum-testnet
  upstreams: |
    ### eth mainnet
    - id: blastapi-eth
      chain: ethereum
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://eth-mainnet.public.blastapi.io"
    - id: allthat-eth
      chain: ethereum
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://ethereum-mainnet-rpc.allthatnode.com"

    ### eth goerli
    - id: blastapi-eth
      chain: goerli
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://eth-goerli.public.blastapi.io"
    - id: allthat-eth
      chain: ethereum
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://ethereum-goerli-rpc.allthatnode.com"

    ### arbitrum mainnet
    - id: allthat-arb
      chain: arbitrum
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://arbitrum-one-rpc.allthatnode.com"
    - id: blastapi-arb
      chain: arbitrum
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://arbitrum-one.public.blastapi.io"

    ### arbitrum goerli
    - id: allthat-arb-goerli
      chain: arbitrum-testnet
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://arbitrum-goerli-rpc.allthatnode.com"
    - id: blastapi-arb-goerli
      chain: arbitrum-testnet
      connection:
        ethereum-pos:
          execution:
            rpc:
              url: "https://arbitrum-goerli.public.blastapi.io"
