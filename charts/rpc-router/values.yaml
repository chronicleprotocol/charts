# Default values for rpc-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# -- default is 20 seconds
preStopSleepSeconds: null
# -- default RollingUpdate
updateStrategy: null
# -- default is 0
maxUnavailable: null
# -- default is 1
maxSurge: null

image:
  repository: drpcorg/dshackle
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
  # configmap.reloader.stakater.com/reload: "rpc-router-config"
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  annotations: {}
  ports:
    proxy:
      port: 8545
      protocol: TCP
    grpc:
      port: 12448
      protocol: TCP
    # -- metrics port, affects the .Values.dshackle.metrics
    metrics:
      port: 8080
      protocol: TCP
    health:
      port: 8082
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: proxy
  initialDelaySeconds: 60
  periodSeconds: 30

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: proxy
  initialDelaySeconds: 10
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis-ha:
  # -- Enables the Redis HA subchart and disables the custom Redis single node deployment
  enabled: true
  ## Redis image
  image:
    # -- Redis repository
    repository: public.ecr.aws/docker/library/redis
    # -- Redis tag
    tag: 7.2.4-alpine
  ## Prometheus redis-exporter sidecar
  exporter:
    # -- Enable Prometheus redis-exporter sidecar
    enabled: false
    # -- Repository to use for the redis-exporter
    image: public.ecr.aws/bitnami/redis-exporter
    # -- Tag to use for the redis-exporter
    tag: 1.58.0
  persistentVolume:
    # -- Configures persistence on Redis nodes
    enabled: false
  ## Redis specific configuration options
  redis:
    # -- Redis convention for naming the cluster group: must match `^[\\w-\\.]+$` and can be templated
    masterGroupName: dshackle
    # -- Any valid redis config options in this section will be applied to each server (see `redis-ha` chart)
    # @default -- See [values.yaml]
    config:
      # -- Will save the DB if both the given number of seconds and the given number of write operations against the DB occurred. `""`  is disabled
      # @default -- `'""'`
      save: '""'

# -- create env vars from secrets, eg RPC provider API keys (eg, Blast API, DRPC, Infura, Alchemy, etc. )
env:
  - name: HEAP_DUMP_ENABLE
    value: "true"
  - name: HEAP_DUMP_PATH
    value: "/tmp"
  # -- log level can be debug, info, warn, error, trace etc.
  - name: DSHACKLE_LOG_LEVEL
    value: "info"
  # - name: DRPC_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: drpc-api-key
  #       key: DRPC_API_KEY
  # - name: BLAST_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: blast-api-key
  #       key: BLAST_API_KEY
  # - name: INFURA_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: infura-api-key
  #       key: INFURA_API_KEY

# -- global method whitelist applied to all upstreams
global_method_whitelist: []

# -- Ref: https://github.com/p2p-org/dshackle/blob/master/docs/reference-configuration.adoc
dshackle:
  signedResponse: false
  # -- enable metrics for dshackle
  metrics:
    # -- enable metrics for dshackle
    enabled: true
    # -- collect jvm metrics
    jvm: false
    # -- collect extended metrics
    extended: false
    # -- host bind address
    bind: "0.0.0.0"
    # default port is 8080, but is setting by .Values.service.ports.metrics.port
    # -- path to metrics
    path: "/metrics"

  proxy:
    # -- Should proxy preserve request-response correspondence when sending batch request via http
    preserveBatchOrder: false

  health:
    host: "0.0.0.0"
    # default port is 8082, but is setting by .Values.service.ports.health.port

  accessLog:
    # -- enable access log, expensive so use only to debug
    enabled: false
    # -- include messages in the access log
    includeMessages: false

  compression:
    grpc:
      server:
        enabled: false
      client:
        enabled: false

  routes:
    # -- the http path the chain is configured on (eg, /eth, /bsc, /matic, etc.), Route id must be alphanumeric and lowercase
    - id: eth
    #   # -- the blockchain name Ref `short-names` @ https://github.com/p2p-org/dshackle/blob/master/foundation/src/main/resources/chains.yaml
      blockchain: ethereum
       # -- upstreams are the RPC providers
      upstreams:
        # -- id is the unique name of the upstream (eg eth-infura, usa-east-1-eth, eth-alchemy, etc.)
        - id: blast-eth
          # -- RPC (http) url is the RPC provider endpoint
          url: https://eth-mainnet.public.blastapi.io
          # -- disableValidation (optional) is used to disable the validation of the RPC provider, default is false
          disableValidation: false
          # -- validateSyncing (optional) is used to validate the syncing of the RPC provider, default is true
          validateSyncing: true
          # -- validatePeers (optional) is used to validate the peers of the RPC provider, default is true
          validatePeers: false
          # -- validateCallLimit (optional) is used to validate the call limit of the RPC provider, default is true
          validateCallLimit: false
          # -- validationInterval (optional) is used to validate the call limit of the RPC provider, default is 30
          validationInterval: "500"
          # -- role can be on of primary, secondary or fallback. default is primary
          role: primary
          # -- add additional labels to the upstream.
          labels: {
            fullnode: true,
            provider: publicnode
          }
          # -- add additional method whitelist to the upstream
          method_whitelist: [
            "eth_maxPriorityFeePerGas",
          ]
        - id: drpc-eth
          # -- RPC (http) url is the RPC provider endpoint
          url: https://eth.drpc.org
          # -- disableValidation (optional) is used to disable the validation of the RPC provider, default is false
          disableValidation: false
          # -- validateSyncing (optional) is used to validate the syncing of the RPC provider, default is true
          validateSyncing: true
          # -- validatePeers (optional) is used to validate the peers of the RPC provider, default is true
          validatePeers: false
          # -- validateCallLimit (optional) is used to validate the call limit of the RPC provider, default is true
          validateCallLimit: false
          # -- role can be on of primary, secondary or fallback. default is primary
          role: fallback
          # -- add additional labels to the upstream
          labels: {
            archive: true,
            provider: drpc
          }

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- port to scrape
  port: metrics
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []
