apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ethereum.fullname" . }}
  labels:
    {{- include "ethereum.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ethereum.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "ethereum.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ethereum.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ethereum.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - geth
          args:
            - --{{ .Values.network }}
            - --datadir={{ .Values.data.path }}/data
            - --http
            - --http.port=8545
            - --http.addr=0.0.0.0
            - --http.vhosts=*
            - --allow-insecure-unlock
            - --http.api=eth,net,engine,admin,web3
            - --authrpc.addr=0.0.0.0
            - --authrpc.vhosts=*
            - --authrpc.jwtsecret=/data/jwt.hex
          ports:
            - name: rpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{ if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: rpc
          readinessProbe:
            httpGet:
              path: /
              port: rpc
          {{ end }}
          volumeMounts:
            - name: ethereum-data
              mountPath: {{ .Values.data.path }}
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "ethereum.fullname" . }}-jwt
  {{- if not .Values.persistence.enabled }}
        - name: ethereum-data
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: ethereum-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}

  volumeClaimTemplates:
    - metadata:
        name: ethereum-data
        annotations:
          {{- toYaml .Values.persistence.annotations | nindent 8 }}
      spec:
        accessModes:
          {{- toYaml .Values.persistence.accessModes | nindent 8 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        {{- if .Values.persistence.selector }}
        selector:
          {{- toYaml .Values.persistence.selector | nindent 8 }}
        {{- end }}
  {{- end }}
